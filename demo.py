#!/usr/bin/env python3
"""
–î–µ–º–æ-–≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –û–¥–∞–Ω–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
–±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram API
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append('.')

from database import db
from ai_model import ai

class OdannDemo:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏"""
        self.current_chat_id = None
        self.user_id = 12345  # –î–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        self.setup_demo_user()
    
    def setup_demo_user(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        db.add_user(self.user_id, "demo_user", "Demo User")
        print("üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—é –±–æ—Ç–∞ –û–¥–∞–Ω–Ω! üå∏")
        print()
        print("–Ø –û–¥–∞–Ω–Ω, —Å–ª—É–∂–∞–Ω–∫–∞ –∏ –ø–æ–≤–∞—Ä –Ω–µ–±–µ—Å–Ω–æ–π –≥–æ—Å—Ç–∏–Ω–∏—Ü—ã –¶—É–Ω–∏–∫—É-–∏–Ω!")
        print("–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞.")
        print()
    
    def show_menu(self):
        """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        print("=" * 50)
        print("üìã –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ")
        print("=" * 50)
        print("1. üí¨ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç")
        print("2. üìö –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —á–∞—Ç–æ–≤")
        print("3. üîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI –æ—Ç–≤–µ—Ç–æ–≤")
        print("4. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö") 
        print("0. üö™ –í—ã—Ö–æ–¥")
        print("=" * 50)
    
    def create_chat_menu(self):
        """–ú–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞"""
        print("\n‚ú® –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –ß–ê–¢–ê ‚ú®")
        print("1. ‚öôÔ∏è  –° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–º")
        print("2. üé¨ –ë–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π)")
        print("0. üîô –ù–∞–∑–∞–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ").strip()
        
        if choice == '1':
            return self.create_custom_chat()
        elif choice == '2':
            return self.create_default_chat()
        elif choice == '0':
            return True
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            return True
    
    def create_custom_chat(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–º"""
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
        print("–û–ø–∏—à–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –û–¥–∞–Ω–Ω:")
        print("‚Ä¢ –ì–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ?")
        print("‚Ä¢ –ö–∞–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è?")
        print("‚Ä¢ –ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞–µ—Ç–µ –≤—ã?")
        print()
        
        scenario = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏–π: ").strip()
        if not scenario:
            print("‚ùå –°—Ü–µ–Ω–∞—Ä–∏–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return True
        
        title = f"–ß–∞—Ç: {scenario[:30]}..." if len(scenario) > 30 else f"–ß–∞—Ç: {scenario}"
        chat_id = db.create_chat(self.user_id, title, scenario)
        
        if chat_id:
            self.current_chat_id = chat_id
            print(f"\n‚úÖ –ß–∞—Ç '{title}' —Å–æ–∑–¥–∞–Ω!")
            
            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –û–¥–∞–Ω–Ω
            greeting = ai.generate_response("–ø—Ä–∏–≤–µ—Ç", [], scenario)
            db.add_message(chat_id, 'bot', greeting)
            
            print(f"üå∏ –û–¥–∞–Ω–Ω: {greeting}")
            return self.chat_loop()
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞!")
            return True
    
    def create_default_chat(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–º"""
        from config import DEFAULT_SCENARIO
        
        title = f"–ß–∞—Ç —Å –û–¥–∞–Ω–Ω #{datetime.now().strftime('%d.%m %H:%M')}"
        chat_id = db.create_chat(self.user_id, title, DEFAULT_SCENARIO)
        
        if chat_id:
            self.current_chat_id = chat_id
            print(f"\n‚úÖ –ß–∞—Ç '{title}' —Å–æ–∑–¥–∞–Ω!")
            print(f"üìñ –°—Ü–µ–Ω–∞—Ä–∏–π: {DEFAULT_SCENARIO}")
            
            # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –û–¥–∞–Ω–Ω
            greeting = ai.generate_response("–ø—Ä–∏–≤–µ—Ç", [], DEFAULT_SCENARIO)
            db.add_message(chat_id, 'bot', greeting)
            
            print(f"üå∏ –û–¥–∞–Ω–Ω: {greeting}")
            return self.chat_loop()
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Ç–∞!")
            return True
    
    def show_chat_list(self):
        """–ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤"""
        chats = db.get_user_chats(self.user_id)
        
        if not chats:
            print("\nüìö –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤")
            print("–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —á–∞—Ç —Å –û–¥–∞–Ω–Ω!")
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            return True
        
        print(f"\nüìö –í–∞—à–∏ —á–∞—Ç—ã —Å –û–¥–∞–Ω–Ω ({len(chats)}):")
        print("=" * 50)
        
        for i, chat in enumerate(chats, 1):
            creation_date = datetime.fromisoformat(chat['creation_date']).strftime('%d.%m.%Y %H:%M')
            print(f"{i}. {chat['title']}")
            print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {creation_date}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            history = db.get_chat_history(chat['chat_id'], 1)
            if history:
                last_msg = history[-1]
                role = "–û–¥–∞–Ω–Ω" if last_msg['role'] == 'bot' else "–í—ã"
                preview = last_msg['content'][:50] + "..." if len(last_msg['content']) > 50 else last_msg['content']
                print(f"   üí¨ –ü–æ—Å–ª–µ–¥–Ω–µ–µ: {role}: {preview}")
            print()
        
        print("0. üîô –ù–∞–∑–∞–¥")
        
        try:
            choice = int(input("–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è: "))
            if choice == 0:
                return True
            elif 1 <= choice <= len(chats):
                selected_chat = chats[choice - 1]
                self.current_chat_id = selected_chat['chat_id']
                return self.open_chat(selected_chat)
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —á–∞—Ç–∞!")
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
        
        return True
    
    def open_chat(self, chat_info):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —á–∞—Ç–∞"""
        print(f"\nüí¨ –û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞: {chat_info['title']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        history = db.get_chat_history(self.current_chat_id, 10)
        if history:
            print("\nüìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:")
            print("-" * 40)
            for msg in history[-5:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
                role_emoji = "üë§" if msg['role'] == 'user' else "üå∏"
                name = "–í—ã" if msg['role'] == 'user' else "–û–¥–∞–Ω–Ω"
                print(f"{role_emoji} {name}: {msg['content']}")
            print("-" * 40)
        
        return self.chat_loop()
    
    def chat_loop(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ"""
        print("\nüí¨ –ù–∞—á–∏–Ω–∞–π—Ç–µ –æ–±—â–µ–Ω–∏–µ! (–≤–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞, 'menu' –¥–ª—è –º–µ–Ω—é —á–∞—Ç–∞)")
        
        while True:
            try:
                user_input = input("\nüë§ –í—ã: ").strip()
                
                if user_input.lower() == 'exit':
                    return True
                elif user_input.lower() == 'menu':
                    return self.chat_menu()
                elif not user_input:
                    continue
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db.add_message(self.current_chat_id, 'user', user_input)
                
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –∏ –∏—Å—Ç–æ—Ä–∏—é
                chat_info = db.get_chat_info(self.current_chat_id)
                history = db.get_chat_history(self.current_chat_id, 10)
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –û–¥–∞–Ω–Ω
                response = ai.generate_response(user_input, history, chat_info['scenario'])
                db.add_message(self.current_chat_id, 'bot', response)
                
                print(f"üå∏ –û–¥–∞–Ω–Ω: {response}")
                
            except KeyboardInterrupt:
                print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                return False
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def chat_menu(self):
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º"""
        chat_info = db.get_chat_info(self.current_chat_id)
        
        print(f"\n‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–æ–º: {chat_info['title']}")
        print("1. ‚úèÔ∏è  –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —á–∞—Ç")
        print("2. üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å —á–∞—Ç")
        print("3. üìú –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("4. üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —á–∞—Ç—É")
        print("0. üö™ –í—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        
        if choice == '1':
            return self.rename_chat()
        elif choice == '2':
            return self.delete_chat()
        elif choice == '3':
            return self.show_chat_history()
        elif choice == '4':
            return self.chat_loop()
        elif choice == '0':
            return True
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
            return self.chat_menu()
    
    def rename_chat(self):
        """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —á–∞—Ç–∞"""
        new_title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞: ").strip()
        if not new_title:
            print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return self.chat_menu()
        
        if db.rename_chat(self.current_chat_id, self.user_id, new_title):
            print(f"‚úÖ –ß–∞—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ '{new_title}'")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è!")
        
        return self.chat_menu()
    
    def delete_chat(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞"""
        chat_info = db.get_chat_info(self.current_chat_id)
        confirm = input(f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —á–∞—Ç '{chat_info['title']}'? (–¥–∞/–Ω–µ—Ç): ").strip().lower()
        
        if confirm in ['–¥–∞', 'yes', 'y']:
            if db.delete_chat(self.current_chat_id, self.user_id):
                print("‚úÖ –ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!")
                self.current_chat_id = None
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–∞—Ç–∞!")
        else:
            print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        
        return self.chat_menu()
    
    def show_chat_history(self):
        """–ü–æ–∫–∞–∑ –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞"""
        history = db.get_chat_history(self.current_chat_id, 50)
        
        print(f"\nüìú –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ ({len(history)} —Å–æ–æ–±—â–µ–Ω–∏–π):")
        print("=" * 60)
        
        for msg in history:
            timestamp = datetime.fromisoformat(msg['timestamp']).strftime('%d.%m %H:%M')
            role_emoji = "üë§" if msg['role'] == 'user' else "üå∏"
            name = "–í—ã" if msg['role'] == 'user' else "–û–¥–∞–Ω–Ω"
            print(f"[{timestamp}] {role_emoji} {name}: {msg['content']}")
        
        print("=" * 60)
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return self.chat_menu()
    
    def demo_ai_responses(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è AI –æ—Ç–≤–µ—Ç–æ–≤"""
        print("\nü§ñ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø AI –û–¢–í–ï–¢–û–í")
        print("=" * 50)
        
        test_scenarios = [
            {
                "scenario": None,
                "name": "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã",
                "messages": ["–ø—Ä–∏–≤–µ—Ç", "–∫–∞–∫ –¥–µ–ª–∞?", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ", "—á—Ç–æ —Ç—ã –≥–æ—Ç–æ–≤–∏—à—å?"]
            },
            {
                "scenario": "–í—ã –≤–ø–µ—Ä–≤—ã–µ –ø—Ä–∏—à–ª–∏ –≤ –Ω–µ–±–µ—Å–Ω—É—é –≥–æ—Å—Ç–∏–Ω–∏—Ü—É –∏ –æ—á–µ–Ω—å –≥–æ–ª–æ–¥–Ω—ã",
                "name": "–°—Ü–µ–Ω–∞—Ä–∏–π: –≥–æ–ª–æ–¥–Ω—ã–π –≥–æ—Å—Ç—å",
                "messages": ["—è –æ—á–µ–Ω—å –≥–æ–ª–æ–¥–µ–Ω", "—á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–µ—Å—Ç—å?", "–º–æ–∂–µ—Ç–µ —á—Ç–æ-—Ç–æ –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å?"]
            },
            {
                "scenario": "–í—ã –≥—Ä—É—Å—Ç–∏—Ç–µ –∏ –Ω—É–∂–¥–∞–µ—Ç–µ—Å—å –≤ —É—Ç–µ—à–µ–Ω–∏–∏",
                "name": "–°—Ü–µ–Ω–∞—Ä–∏–π: —É—Ç–µ—à–µ–Ω–∏–µ",
                "messages": ["–º–Ω–µ –≥—Ä—É—Å—Ç–Ω–æ", "—É –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º—ã", "–Ω–µ –∑–Ω–∞—é —á—Ç–æ –¥–µ–ª–∞—Ç—å"]
            }
        ]
        
        for scenario_data in test_scenarios:
            print(f"\nüìñ {scenario_data['name']}")
            if scenario_data['scenario']:
                print(f"–°—Ü–µ–Ω–∞—Ä–∏–π: {scenario_data['scenario']}")
            print("-" * 40)
            
            for msg in scenario_data['messages']:
                response = ai.generate_response(msg, [], scenario_data['scenario'])
                print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {msg}")
                print(f"üå∏ –û–¥–∞–Ω–Ω: {response}")
                print()
        
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return True
    
    def show_database_stats(self):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
        print("=" * 50)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        total_chats = db.get_chat_count(self.user_id)
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 1 (–¥–µ–º–æ)")
        print(f"üí¨ –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {total_chats}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        chats = db.get_user_chats(self.user_id)
        total_messages = 0
        
        for chat in chats:
            history = db.get_chat_history(chat['chat_id'], 1000)
            total_messages += len(history)
        
        print(f"üìù –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}")
        
        # –î–µ—Ç–∞–ª–∏ –ø–æ —á–∞—Ç–∞–º
        if chats:
            print(f"\nüìã –î–µ—Ç–∞–ª–∏ –ø–æ —á–∞—Ç–∞–º:")
            for chat in chats:
                history = db.get_chat_history(chat['chat_id'], 1000)
                user_msgs = len([m for m in history if m['role'] == 'user'])
                bot_msgs = len([m for m in history if m['role'] == 'bot'])
                creation_date = datetime.fromisoformat(chat['creation_date']).strftime('%d.%m.%Y')
                
                print(f"  ‚Ä¢ {chat['title']}")
                print(f"    –°–æ–∑–¥–∞–Ω: {creation_date}")
                print(f"    –°–æ–æ–±—â–µ–Ω–∏–π: {user_msgs} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, {bot_msgs} –æ—Ç –û–¥–∞–Ω–Ω")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
        return True
    
    def run(self):
        """–ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –¥–µ–º–æ-–ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        while True:
            try:
                self.show_menu()
                choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
                
                if choice == '1':
                    if not self.create_chat_menu():
                        break
                elif choice == '2':
                    if not self.show_chat_list():
                        break
                elif choice == '3':
                    if not self.demo_ai_responses():
                        break
                elif choice == '4':
                    if not self.show_database_stats():
                        break
                elif choice == '0':
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –û–¥–∞–Ω–Ω!")
                    break
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
                
            except KeyboardInterrupt:
                print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

def main():
    """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏"""
    print("üå∏" * 25)
    print("  –î–ï–ú–û-–í–ï–†–°–ò–Ø –ë–û–¢–ê –û–î–ê–ù–ù")
    print("üå∏" * 25)
    print()
    
    try:
        demo = OdannDemo()
        demo.run()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤.")

if __name__ == '__main__':
    main()